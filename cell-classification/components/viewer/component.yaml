name: dkube-viewer
description: |
    Viewer component which renders UI as static HTML in KF Output viewer.
    Support view types,
    * A web application to test inference for Dkube examples Only.
    * In future will add TFMA, Tensorboard etc..
metadata:
  annotations: {platform: 'Dkube'}
  labels: {platform: 'Dkube', logger: 'dkubepl', wfid: '{{workflow.uid}}', runid: '{{pod.name}}', stage: 'viewer', dkube.garbagecollect: 'true', dkube.garbagecollect.policy: 'all'}
inputs:
  - {name: auth_token,      type: String,   optional: false,
     description: 'Required. Dkube authentication token.'}
  - {name: servingurl,      type: String,   optional: false,
     description: 'Required. URL where the model is deployed for serving in Dkube.'}
  - {name: servingexample,  type: String,   optional: false,
     description: 'Required. Name of the Dkube example which is deployed for serving.
                   Possible options - digits/catsdogs/bolts'}
  - {name: viewtype,        type: String,   optional: true,     default: 'inference',
     description: 'Optional. Currently on viewtype=inference is only supported.'}
  - {name: access_url,      type: String,   optional: true,     default: '',
     description: 'Optional. URL at which dkube is accessible, copy paste from the browser of this window. Required for cloud deployments.'}
outputs:
  - {name: rundetails,       description: 'Details of the run'}
implementation:
  container:
    image: ocdr/dkubepl:1.5.4
    command: ['dkubepl']
    args: [
      viewer,
      --accessurl, {inputValue: access_url},
      --viewtype, {inputValue: viewtype},
      --token, {inputValue: auth_token},
      --servingurl, {inputValue: servingurl},
      --servingexample, {inputValue: servingexample},
      --runid, '{{pod.name}}',
      --wfid, '{{workflow.uid}}'
    ]
    fileOutputs:
      rundetails: /tmp/rundetails